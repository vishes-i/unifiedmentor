<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Modern Fitness Tracker </title>
    <link rel="stylesheet" href="styles.css" />
</head>
<body>

<div class="bg"></div>


<nav>
    <a href="fit.html" class="active"><ion-icon name="home"></ion-icon></a>
    <a href="rttt.html"><i class="fa-solid fa-person-running"></i></ion-icon></a>
    <a href="ertt.html"><i class="fa-solid fa-medal"></i></a>
    <a href="rtyy.html" style="font-size: 1.4rem"><i class="fa-solid fa-heart"></i></a>
    <a href="sdffg.html"><ion-icon name="people"></ion-icon></a>

    <div class="navspacer"></div>
    <a href=""><ion-icon name="settings"></ion-icon></a>
    <a href="profile.html"><ion-icon style="
	font-size: 1.75rem;" name="person-circle-outline"></ion-icon></a>
</nav>




<div class="dashboard" >

    <div class="card profile" style="grid-area: 1/1/2/3; border: solid 15px rgba(79,2,165,0.6)" >
        <h2>HAPPY MORNING TO YOU GUYS!</h2>
        <p>It's Time to grab the chance</p>
    </div>

    <div class="card schedule-table" style="grid-area: span 2 / span 2;border: solid 15px blueviolet">
        <h2 style="color: #0a0a0a;text-align: center;font-weight: bolder;font-size: x-large">Weekly Schedule</h2>
        <hr>
        <table>
            <tr>
                <th>Day</th>
                <th>Exercise</th>
                <th>Time</th>
            </tr>
            <tr>
                <td>Monday</td>
                <td>Running</td>
                <td>4:00</td>
            </tr>
            <tr>
                <td>Tuesday</td>
                <td>Swimming</td>
                <td>9:00</td>
            </tr>
            <tr>
                <td>Wednesday</td>
                <td>Cycling</td>
                <td>7:30</td>
            </tr>
            <tr>
                <td>Thursday</td>
                <td>Yoga</td>
                <td>5:00</td>
            </tr>
            <tr>
                <td>Friday</td>
                <td>Weight Training</td>
                <td>11:00</td>
            </tr>
        </table>
    </div>

    <div class="card calories" style="grid-area: 2/1/3/3  ; border: solid 15px #51028e">
        <h2 style="color: #0a0a0a;text-align: center;font-weight: bolder;font-size: x-large">Active Calories</h2>
        <div class="bigstats">
            <div class="stat">
                <div class="statnum">481</div>
                <div class="stattext">Today</div>
            </div>
            <div class="stat">
                <div class="statnum">345</div>
                <div class="stattext">This Week</div>
            </div>
            <div class="stat">
                <div class="statnum">1600</div>
                <div class="stattext">This Month</div>
            </div>
        </div>
    </div>

    <div class="card exercise-table" style="grid-area: span 2 / span 2;border: solid 15px #5b03ae">
        <h2 style="font-size: x-large;font-weight: bolder;text-align: center;color: #0a0a0a">Last 5 Exercises</h2>
        <hr>
        <div class="bigstats">
            <div class="stat">
                <div class="statnum">1Hr</div>
                <div class="stattext">Running</div>
            </div>
            <div class="stat">
                <div class="statnum">30Mn</div>
                <div class="stattext">Swimming</div>
            </div>
            <div class="stat">
                <div class="statnum">40Mn</div>
                <div class="stattext">Cycling</div>
            </div>
            <div class="stat">
                <div class="statnum">2Hr</div>
                <div class="stattext">Yoga</div>
            </div>
            <div class="stat">
                <div class="statnum">50Mn</div>
                <div class="stattext">Weight Training</div>
            </div>
        </div>
    </div>

    <div class="card personal-bests" style="grid-area: span 2 / span 2; border:solid 15px #6001b6">
        <h2 style="color: #0a0a0a;font-weight: bolder;font-size: x-large;text-align: center">Personal Bests</h2>
        <hr>
        <ul>
            <li>
                Fastest 5K Run
                <div class="statnum">20m</div>
            </li>
            <li>
                Heaviest Deadlift
                <div class="statnum">250lbs</div>
            </li>
            <li>
                Longest Plank:
                <div class="statnum">2m</div>
            </li>
        </ul>
    </div>

    <div class="card challenges" style="grid-area: span 2 / span 2;border: solid 15px #6403bd">
        <h2 style="text-align: center;font-size: x-large;font-weight: bolder;color: #0a0a0a">Challenges</h2>
        <hr>
        <ul>
            <li>
                <span>30-day running streak</span>
                <div class="progresscircle" style="--progress: 53">
                    <div>16/30</div>
                    <svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewbox="0 0 100 100">
                        <circle cx="50" cy="50" r="40" stroke-linecap="round" />
                    </svg>
                </div>
            </li>
            <li>
                <span>1000 push-up in a month</span>
                <div class="progresscircle" style="--progress: 67">
                    <div>670</div>
                    <svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewbox="0 0 100 100">
                        <circle cx="50" cy="50" r="40" stroke-linecap="round" />
                    </svg>
                </div>
            </li>
            <li>
                <span>Swim 20km in a month</span>
                <div class="progresscircle" style="--progress: 75">
                    <div>15/20</div>
                    <svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewbox="0 0 100 100">
                        <circle cx="50" cy="50" r="40" stroke-linecap="round" />
                    </svg>
                </div>
            </li>
            </ul>
    </div>

    <div class="card activity-feed" style="grid-area: span 2 / span 2;border:15px solid #5b03ae">
        <h2 style="color: #0a0a0a;font-weight: bolder;font-size: x-large;text-align: center">Friends Activity</h2>
        <ul>
            <li>vishesh just set a new record in cycling: 50 miles!</li>
            <li>vijay completed the 30-Day Running Streak Challenge!</li>
            <li>sujeet shared a new workout: 'Hill Sprints Interval'.</li>
        </ul>
    </div>
</div>

<script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
<script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
<script src="https://kit.fontawesome.com/e267099c50.js" crossorigin="anonymous"></script>
</body>
</html>
</body>
</html
-----------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<style>
    p{
        font-size: xx-large;
        color: #0a0a0a;
        font-family: "Times New Roman,",serif;
        font-variant:small-caps;
        font-weight: bolder;
    }
</style>
<body style="background-color: #8503fa">
<header>
    <h1 style="text-align: center; margin-left: 100px;">WELCOME TO MY PROFILE</h1>

    <img src="https://cdn-icons-png.flaticon.com/512/9203/9203764.png" width="450px" height="300px" style="margin-left:500px; border-radius: 50%;">
    <BR>
    <BR>
    <a href="" style="margin-left: 700px; text-decoration: none; font-size: larger; font-variant: small-caps;">PROFILE</a>
    <br>
    <br>
    <br>
    <P style=" text-align: center;">CHANCELLOR:</P>
    <P style=" text-align: center;">VISHESH KUMAR PRAJAPATI</P>
    <p style=" text-align: center;">CERTIFICATES:</p>
    <p style=" text-align:center ;">BACHELOR OF TECHNOLOGY[COMPUTER SCIENCE ENGINEERING]</P>
    <div class=" LOGO" style="margin-left: 600px; display: grid; grid-template-columns: repeat(2,0fr);" >
        <div style="background-color:red ;  height: 200px; width:200px  " class="red"></div>
        <div style="background-color: green ; height: 200px; width: 200px;"class="yellow"></div>
        <div style="background-color : blue ; height: 200px; width: 200px; "class="green"></div>
        <div style="background-color:yellow ; height: 200px;  width: 200px;"class="blue"></div>
    </div>
    <h1 style="margin-left:700px;">MIOCROSOFT</h1>
</header>
</body>
</html>
----------------[
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>document</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.4/dist/jquery.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/handsontable/0.35.1/handsontable.min.css" rel="stylesheet">
</head>
<body style="padding-top: 5rem; background-color: #0ea5e9">
<nav class="navbar navbar-expand-md navbar-dark bg-dark fixed-top">
    <div class="container">
        <a class="navbar-brand" href="#">Database</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarsExampleDefault" aria-controls="navbarsExampleDefault" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarsExampleDefault">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                    <a class="nav-link" href="#">Home <span class="sr-only"></span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Get Started</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Community</a>
                </li>
            </ul>
            <a class="btn btn-success my-2 my-sm-0" href="#"><i class="fa fa-sign-in"></i> Login</a>
        </div>
    </div>
</nav>
<main role="main" class="container">
    <h1>Gym Database</h1>
    <p class="lead">Managing Gym Trainer</p>
    <div class="container welcome-div">
        <div id="employee">
        </div>
    </div>
</main>
<BUTTON STYLE="text-align: center;margin-top: 300px;margin-left: 300px">SUBMIT</BUTTON>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/handsontable/0.35.1/handsontable.min.js"></script>
<script type="text/javascript">
    var data = [{
        "first_name": "Vishesh",
        "last_name": "Kumar",
        "email": "visheshk.p@gmail.com",
        "gender": "male",
        "course": "weightlifting"
    }, {
        "first_name": "Vijay",
        "last_name": "Kharwar",
        "email": "vijaygzp@gmail.com",
        "gender": "male",
        "course": "aerobic activity"
    }, {
        "first_name": "Sujeet",
        "last_name": "Yadav",
        "email": "sujeety345@gmail.com",
        "gender": "male",
        "course": "yoga"
    },{
        "first_name": "Vaishali",
        "last_name": "Kumari",
        "email": "vaishalik.p@gmail.com",
        "gender": "Female",
        "course": "swimming"
    }, {
        "first_name": "Vishaka",
        "last_name": "Pandey",
        "email": "vishakayg345zp@gmail.com",
        "gender": "Female",
        "course": "aerobic activity"
    }, {
        "first_name": "Swati",
        "last_name": "Srivastava",
        "email": "swatisrivastava345@gmail.com",
        "gender": "Female",
        "course": "cycling"
    }]
    var container = document.getElementById('employee');
    var hot = new Handsontable(container, {
        data: data,
        rowHeaders: true,
        colHeaders: false,
        colHeaders: ['first name', 'Last name', 'email', 'Gender', 'course'],
        columnSorting: true,
        sortIndicator: true
    });
</script>
</body>
</html>
----------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BMI Calculator</title>
    <link data-asynced="1" as="style" onload="this.onload=null;this.rel='stylesheet'"  rel="preload" href="style67.css">
</head>
<body>
<div class="container">
    <h1>BMI Calculator</h1>
    <div class="input-container">
        <label for="height">Height:</label>
        <input type="number" id="height" placeholder="Height (cm)">
    </div>
    <div class="input-container">
        <label for="weight">Weight:</label>
        <input type="number" id="weight" placeholder="Weight (kg)">
    </div>
    <button onclick="calculateBMI()">Calculate</button>
    <div id="result"></div>
</div> <script type="litespeed/javascript" data-src="script.js"></script> <script data-no-optimize="1">!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).LazyLoad=e()}(this,function(){"use strict";function e(){return(e=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n,a=arguments[e];for(n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t}).apply(this,arguments)}function i(t){return e({},it,t)}function o(t,e){var n,a="LazyLoad::Initialized",i=new t(e);try{n=new CustomEvent(a,{detail:{instance:i}})}catch(t){(n=document.createEvent("CustomEvent")).initCustomEvent(a,!1,!1,{instance:i})}window.dispatchEvent(n)}function l(t,e){return t.getAttribute(gt+e)}function c(t){return l(t,bt)}function s(t,e){return function(t,e,n){e=gt+e;null!==n?t.setAttribute(e,n):t.removeAttribute(e)}(t,bt,e)}function r(t){return s(t,null),0}function u(t){return null===c(t)}function d(t){return c(t)===vt}function f(t,e,n,a){t&&(void 0===a?void 0===n?t(e):t(e,n):t(e,n,a))}function _(t,e){nt?t.classList.add(e):t.className+=(t.className?" ":"")+e}function v(t,e){nt?t.classList.remove(e):t.className=t.className.replace(new RegExp("(^|\\s+)"+e+"(\\s+|$)")," ").replace(/^\s+/,"").replace(/\s+$/,"")}function g(t){return t.llTempImage}function b(t,e){!e||(e=e._observer)&&e.unobserve(t)}function p(t,e){t&&(t.loadingCount+=e)}function h(t,e){t&&(t.toLoadCount=e)}function n(t){for(var e,n=[],a=0;e=t.children[a];a+=1)"SOURCE"===e.tagName&&n.push(e);return n}function m(t,e){(t=t.parentNode)&&"PICTURE"===t.tagName&&n(t).forEach(e)}function a(t,e){n(t).forEach(e)}function E(t){return!!t[st]}function I(t){return t[st]}function y(t){return delete t[st]}function A(e,t){var n;E(e)||(n={},t.forEach(function(t){n[t]=e.getAttribute(t)}),e[st]=n)}function k(a,t){var i;E(a)&&(i=I(a),t.forEach(function(t){var e,n;e=a,(t=i[n=t])?e.setAttribute(n,t):e.removeAttribute(n)}))}function L(t,e,n){_(t,e.class_loading),s(t,ut),n&&(p(n,1),f(e.callback_loading,t,n))}function w(t,e,n){n&&t.setAttribute(e,n)}function x(t,e){w(t,ct,l(t,e.data_sizes)),w(t,rt,l(t,e.data_srcset)),w(t,ot,l(t,e.data_src))}function O(t,e,n){var a=l(t,e.data_bg_multi),i=l(t,e.data_bg_multi_hidpi);(a=at&&i?i:a)&&(t.style.backgroundImage=a,n=n,_(t=t,(e=e).class_applied),s(t,ft),n&&(e.unobserve_completed&&b(t,e),f(e.callback_applied,t,n)))}function N(t,e){!e||0<e.loadingCount||0<e.toLoadCount||f(t.callback_finish,e)}function C(t,e,n){t.addEventListener(e,n),t.llEvLisnrs[e]=n}function M(t){return!!t.llEvLisnrs}function z(t){if(M(t)){var e,n,a=t.llEvLisnrs;for(e in a){var i=a[e];n=e,i=i,t.removeEventListener(n,i)}delete t.llEvLisnrs}}function R(t,e,n){var a;delete t.llTempImage,p(n,-1),(a=n)&&--a.toLoadCount,v(t,e.class_loading),e.unobserve_completed&&b(t,n)}function T(o,r,c){var l=g(o)||o;M(l)||function(t,e,n){M(t)||(t.llEvLisnrs={});var a="VIDEO"===t.tagName?"loadeddata":"load";C(t,a,e),C(t,"error",n)}(l,function(t){var e,n,a,i;n=r,a=c,i=d(e=o),R(e,n,a),_(e,n.class_loaded),s(e,dt),f(n.callback_loaded,e,a),i||N(n,a),z(l)},function(t){var e,n,a,i;n=r,a=c,i=d(e=o),R(e,n,a),_(e,n.class_error),s(e,_t),f(n.callback_error,e,a),i||N(n,a),z(l)})}function G(t,e,n){var a,i,o,r,c;t.llTempImage=document.createElement("IMG"),T(t,e,n),E(c=t)||(c[st]={backgroundImage:c.style.backgroundImage}),o=n,r=l(a=t,(i=e).data_bg),c=l(a,i.data_bg_hidpi),(r=at&&c?c:r)&&(a.style.backgroundImage='url("'.concat(r,'")'),g(a).setAttribute(ot,r),L(a,i,o)),O(t,e,n)}function D(t,e,n){var a;T(t,e,n),a=e,e=n,(t=It[(n=t).tagName])&&(t(n,a),L(n,a,e))}function V(t,e,n){var a;a=t,(-1<yt.indexOf(a.tagName)?D:G)(t,e,n)}function F(t,e,n){var a;t.setAttribute("loading","lazy"),T(t,e,n),a=e,(e=It[(n=t).tagName])&&e(n,a),s(t,vt)}function j(t){t.removeAttribute(ot),t.removeAttribute(rt),t.removeAttribute(ct)}function P(t){m(t,function(t){k(t,Et)}),k(t,Et)}function S(t){var e;(e=At[t.tagName])?e(t):E(e=t)&&(t=I(e),e.style.backgroundImage=t.backgroundImage)}function U(t,e){var n;S(t),n=e,u(e=t)||d(e)||(v(e,n.class_entered),v(e,n.class_exited),v(e,n.class_applied),v(e,n.class_loading),v(e,n.class_loaded),v(e,n.class_error)),r(t),y(t)}function $(t,e,n,a){var i;n.cancel_on_exit&&(c(t)!==ut||"IMG"===t.tagName&&(z(t),m(i=t,function(t){j(t)}),j(i),P(t),v(t,n.class_loading),p(a,-1),r(t),f(n.callback_cancel,t,e,a)))}function q(t,e,n,a){var i,o,r=(o=t,0<=pt.indexOf(c(o)));s(t,"entered"),_(t,n.class_entered),v(t,n.class_exited),i=t,o=a,n.unobserve_entered&&b(i,o),f(n.callback_enter,t,e,a),r||V(t,n,a)}function H(t){return t.use_native&&"loading"in HTMLImageElement.prototype}function B(t,i,o){t.forEach(function(t){return(a=t).isIntersecting||0<a.intersectionRatio?q(t.target,t,i,o):(e=t.target,n=t,a=i,t=o,void(u(e)||(_(e,a.class_exited),$(e,n,a,t),f(a.callback_exit,e,n,t))));var e,n,a})}function J(e,n){var t;et&&!H(e)&&(n._observer=new IntersectionObserver(function(t){B(t,e,n)},{root:(t=e).container===document?null:t.container,rootMargin:t.thresholds||t.threshold+"px"}))}function K(t){return Array.prototype.slice.call(t)}function Q(t){return t.container.querySelectorAll(t.elements_selector)}function W(t){return c(t)===_t}function X(t,e){return e=t||Q(e),K(e).filter(u)}function Y(e,t){var n;(n=Q(e),K(n).filter(W)).forEach(function(t){v(t,e.class_error),r(t)}),t.update()}function t(t,e){var n,a,t=i(t);this._settings=t,this.loadingCount=0,J(t,this),n=t,a=this,Z&&window.addEventListener("online",function(){Y(n,a)}),this.update(e)}var Z="undefined"!=typeof window,tt=Z&&!("onscroll"in window)||"undefined"!=typeof navigator&&/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent),et=Z&&"IntersectionObserver"in window,nt=Z&&"classList"in document.createElement("p"),at=Z&&1<window.devicePixelRatio,it={elements_selector:".lazy",container:tt||Z?document:null,threshold:300,thresholds:null,data_src:"src",data_srcset:"srcset",data_sizes:"sizes",data_bg:"bg",data_bg_hidpi:"bg-hidpi",data_bg_multi:"bg-multi",data_bg_multi_hidpi:"bg-multi-hidpi",data_poster:"poster",class_applied:"applied",class_loading:"litespeed-loading",class_loaded:"litespeed-loaded",class_error:"error",class_entered:"entered",class_exited:"exited",unobserve_completed:!0,unobserve_entered:!1,cancel_on_exit:!0,callback_enter:null,callback_exit:null,callback_applied:null,callback_loading:null,callback_loaded:null,callback_error:null,callback_finish:null,callback_cancel:null,use_native:!1},ot="src",rt="srcset",ct="sizes",lt="poster",st="llOriginalAttrs",ut="loading",dt="loaded",ft="applied",_t="error",vt="native",gt="data-",bt="ll-status",pt=[ut,dt,ft,_t],ht=[ot],mt=[ot,lt],Et=[ot,rt,ct],It={IMG:function(t,e){m(t,function(t){A(t,Et),x(t,e)}),A(t,Et),x(t,e)},IFRAME:function(t,e){A(t,ht),w(t,ot,l(t,e.data_src))},VIDEO:function(t,e){a(t,function(t){A(t,ht),w(t,ot,l(t,e.data_src))}),A(t,mt),w(t,lt,l(t,e.data_poster)),w(t,ot,l(t,e.data_src)),t.load()}},yt=["IMG","IFRAME","VIDEO"],At={IMG:P,IFRAME:function(t){k(t,ht)},VIDEO:function(t){a(t,function(t){k(t,ht)}),k(t,mt),t.load()}},kt=["IMG","IFRAME","VIDEO"];return t.prototype={update:function(t){var e,n,a,i=this._settings,o=X(t,i);{if(h(this,o.length),!tt&&et)return H(i)?(e=i,n=this,o.forEach(function(t){-1!==kt.indexOf(t.tagName)&&F(t,e,n)}),void h(n,0)):(t=this._observer,i=o,t.disconnect(),a=t,void i.forEach(function(t){a.observe(t)}));this.loadAll(o)}},destroy:function(){this._observer&&this._observer.disconnect(),Q(this._settings).forEach(function(t){y(t)}),delete this._observer,delete this._settings,delete this.loadingCount,delete this.toLoadCount},loadAll:function(t){var e=this,n=this._settings;X(t,n).forEach(function(t){b(t,e),V(t,n,e)})},restoreAll:function(){var e=this._settings;Q(e).forEach(function(t){U(t,e)})}},t.load=function(t,e){e=i(e);V(t,e)},t.resetStatus=function(t){r(t)},Z&&function(t,e){if(e)if(e.length)for(var n,a=0;n=e[a];a+=1)o(t,n);else o(t,e)}(t,window.lazyLoadOptions),t});!function(e,t){"use strict";function a(){t.body.classList.add("litespeed_lazyloaded")}function n(){console.log("[LiteSpeed] Start Lazy Load Images"),d=new LazyLoad({elements_selector:"[data-lazyloaded]",callback_finish:a}),o=function(){d.update()},e.MutationObserver&&new MutationObserver(o).observe(t.documentElement,{childList:!0,subtree:!0,attributes:!0})}var d,o;e.addEventListener?e.addEventListener("load",n,!1):e.attachEvent("onload",n)}(window,document);</script><script data-no-optimize="1">var litespeed_vary=document.cookie.replace(/(?:(?:^|.*;\s*)_lscache_vary\s*\=\s*([^;]*).*$)|^.*$/,"");litespeed_vary||fetch("/wp-content/plugins/litespeed-cache/guest.vary.php",{method:"POST",cache:"no-cache",redirect:"follow"}).then(e=>e.json()).then(e=>{console.log(e),e.hasOwnProperty("reload")&&"yes"==e.reload&&(sessionStorage.setItem("litespeed_docref",document.referrer),window.location.reload(!0))});</script><script data-optimized="1" type="litespeed/javascript" data-src="https://codewithcurious.com/wp-content/litespeed/js/8bebd10975b2b2d1ef75b859e378eb89.js?ver=e633c"></script><script>const litespeed_ui_events=["mouseover","click","keydown","wheel","touchmove","touchstart"];var urlCreator=window.URL||window.webkitURL;function litespeed_load_delayed_js_force(){console.log("[LiteSpeed] Start Load JS Delayed"),litespeed_ui_events.forEach(e=>{window.removeEventListener(e,litespeed_load_delayed_js_force,{passive:!0})}),document.querySelectorAll("iframe[data-litespeed-src]").forEach(e=>{e.setAttribute("src",e.getAttribute("data-litespeed-src"))}),"loading"==document.readyState?window.addEventListener("DOMContentLoaded",litespeed_load_delayed_js):litespeed_load_delayed_js()}litespeed_ui_events.forEach(e=>{window.addEventListener(e,litespeed_load_delayed_js_force,{passive:!0})});async function litespeed_load_delayed_js(){let t=[];for(var d in document.querySelectorAll('script[type="litespeed/javascript"]').forEach(e=>{t.push(e)}),t)await new Promise(e=>litespeed_load_one(t[d],e));document.dispatchEvent(new Event("DOMContentLiteSpeedLoaded")),window.dispatchEvent(new Event("DOMContentLiteSpeedLoaded"))}function litespeed_load_one(t,e){console.log("[LiteSpeed] Load ",t);var d=document.createElement("script");d.addEventListener("load",e),d.addEventListener("error",e),t.getAttributeNames().forEach(e=>{"type"!=e&&d.setAttribute("data-src"==e?"src":e,t.getAttribute(e))});let a=!(d.type="text/javascript");!d.src&&t.textContent&&(d.src=litespeed_inline2src(t.textContent),a=!0),t.after(d),t.remove(),a&&e()}function litespeed_inline2src(t){try{var d=urlCreator.createObjectURL(new Blob([t.replace(/^(?:<!--)?(.*?)(?:-->)?$/gm,"$1")],{type:"text/javascript"}))}catch(e){d="data:text/javascript;base64,"+btoa(t.replace(/^(?:<!--)?(.*?)(?:-->)?$/gm,"$1"))}return d}</script></body>
<script src="script345.js"></script>
</body>
</html>
------------------------------------
function calculateBMI() {
    var heightInput = document.getElementById("height");
    var weightInput = document.getElementById("weight");
    var resultDiv = document.getElementById("result");

    var height = parseFloat(heightInput.value);
    var weight = parseFloat(weightInput.value);

    if (isNaN(height) || isNaN(weight)) {
        resultDiv.innerHTML = "Please enter valid height and weight.";
        return;
    }

    var bmi = weight / ((height / 100) ** 2);
    var category = "";

    if (bmi < 18.5) {
        category = "Underweight";
    } else if (bmi < 25) {
        category = "Normal weight";
    } else if (bmi < 30) {
        category = "Overweight";
    } else {
        category = "Obese";
    }

    resultDiv.innerHTML = "Your BMI is " + bmi.toFixed(2) + " (" + category + ")";
}

function calculateBMI() {
    var heightInput = document.getElementById("height");
    var weightInput = document.getElementById("weight");
    var resultDiv = document.getElementById("result");

    var height = parseFloat(heightInput.value);
    var weight = parseFloat(weightInput.value);

    if (isNaN(height) || isNaN(weight)) {
        resultDiv.innerHTML = "Please enter valid height and weight.";
        return;
    }

    var bmi = weight / ((height / 100) ** 2);
    var category = "";

    if (bmi < 18.5) {
        category = "Underweight";
    } else if (bmi < 25) {
        category = "Normal weight";
    } else if (bmi < 30) {
        category = "Overweight";
    } else {
        category = "Obese";
    }

    resultDiv.innerHTML = "Your BMI is " + bmi.toFixed(2) + " (" + category + ")";
}
---------------------
body {
    background-color: #f2f2f2;
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

.container {
    max-width: 400px;
    margin: 50px auto;
    padding: 20px;
    background-color: #fff;
    border-radius: 5px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    text-align: center;
}

h1 {
    color: #333;
}

.input-container {
    margin-bottom: 10px;
    text-align: left;
}

input[type="number"] {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    box-sizing: border-box;
}

button {
    background-color: #4caf50;
    color: #fff;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
}

#result {
    margin-top: 20px;
    font-weight: bold;
}
/* @codewithcurious.com */

body {
    background-color: #f2f2f2;
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

.container {
    max-width: 400px;
    margin: 50px auto;
    padding: 20px;
    background-color: #fff;
    border-radius: 5px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    text-align: center;
}

h1 {
    color: #333;
}

.input-container {
    margin-bottom: 10px;
    text-align: left;
}

input[type="number"] {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    box-sizing: border-box;
}

button {
    background-color: #4caf50;
    color: #fff;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
}

#result {
    margin-top: 20px;
    font-weight: bold;
}
-------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <title>
        FITNESS TRACKER WEB2
    </title>
    <link rel="stylesheet" href="/style2.css">
</head>
<style>
    label{
        color: green ;
        font-size: x-large;
    }
</style>
<body>
<div class="app">
    <h1></h1>
    <h3 STYLE="font-family: 'Times New Roman',serif; font-size: xxx-large; color: blue">Details  of Health  Care  Candidate</h3>
    <div class="inputs">
        <div>
            <label for="water">
             NAME
            </label>
            <input id="water" type="text">
        </div>
        <div>
            <label for="exercise">
                Training Points
            </label>
            <input id="exercise" type="number">
        </div>
        <div>
            <label for="bloodsugerlevel">
           Age
            </label>
            <input id="bloodsugerlevel" type="number">
        </div>
    </div>
    <button id="submit">Submit</button>
    <div id="editSection" class="hidden">
        <button id="cancelEdit" onclick="cancelEdit()">
            Cancel
        </button>
        <button id="updateEntry" onclick="editRow()">
            Update
        </button>
    </div>
    <table>
        <thead>
        <tr>
            <th>Date</th>
            <th>Name</th>
            <th>Training  Point No.</th>
            <th>Age </th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
        </thead>
        <tbody id="output">
        </tbody>
    </table>
</div>

<script src="/script24.js"></script>
</body>

</html>

const editIcon = `<i class="fas fa-edit"></i>`

const deleteIcon = `<i class="fas fa-trash"></i>`

function clearInputs() {
    wInput.value = ""
    eInput.value = ""
    bInput.value = ""
}

function addToLocalStorage(){
    localStorage.setItem("date", JSON.stringify(date))
    localStorage.setItem("water", JSON.stringify(water))
    localStorage.setItem("exercise", JSON.stringify(exercise))
    localStorage.setItem("bloodsugar", JSON.stringify(bloodsugar))
}

function activateEdit(i){
    wInput.value = water[i]
    eInput.value = exercise[i]
    bInput.value = bloodsugar[i]
    editIndex = i
    submitButton.classList.add("hidden")
    editSection.classList.remove("hidden")
}

function cancelEdit() {
    clearInputs()
    editIndex = -1
    submitButton.classList.remove("hidden")
    editSection.classList.add("hidden")
}

function editRow(){
    if(editIndex==-1) return
    water[editIndex] = wInput.value
    exercise[editIndex] = eInput.value
    bloodsugar[editIndex] = bInput.value
    fillTable()
    addToLocalStorage()
    cancelEdit()
}

function deleteRow(i){
    if(!confirm(
        `Confirm that you want to delete the entry: 
    \n ${date[i]}: ${water[i]}ml, ${exercise[i]}min, 
${bloodsugar[i]}mg/dL`))
        return
    date.splice(i, 1)
    water.splice(i, 1)
    exercise.splice(i, 1)
    bloodsugar.splice(i, 1)
    document.querySelector(`#output > tr:nth-child(${i+1})`)
        .classList.add("delete-animation")
    addToLocalStorage()
    setTimeout(fillTable, 500)
}

function fillTable(){
    const tbody = document.getElementById("output")
    const rows =
        Math.max(water.length, exercise.length, bloodsugar.length)
    let html = ""
    for(let i=0; i<rows; i++){
        let w = water[i] || "N/A"
        let e = exercise[i] || "N/A"
        let b = bloodsugar[i] || "N/A"
        let d = date[i] || "N/A"
        html+=`<tr>
            <td>${d}</td>
            <td>${w}</td>
            <td>${e}</td>
            <td>${b}</td>
            <td>
                <button onclick="activateEdit(${i})" 
                        class="edit">${editIcon}
                </button>
            </td>
            <td>
                <button 
                    onclick="deleteRow(${i})" 
                    class="delete">${deleteIcon}
                </button>
            </td>
        </tr>`
    }
    tbody.innerHTML = html;
}

let editIndex = -1;

let date =
    JSON.parse(localStorage.getItem("date")) || []
let water =
    JSON.parse(localStorage.getItem("water")) || []
let exercise =
    JSON.parse(localStorage.getItem("exercise")) || []
let bloodsugar =
    JSON.parse(localStorage.getItem("bloodsugar")) || []

const wInput = document.getElementById("water")
const eInput = document.getElementById("exercise")
const bInput = document.getElementById("bloodsugerlevel")

const submitButton = document.getElementById("submit")
const editSection = document.getElementById("editSection")

fillTable()

submitButton.addEventListener("click", ()=>{
    const w = wInput.value || null;
    const e = eInput.value || null;
    const b = bInput.value || null;
    if(w===null || e===null || b===null) {
        alert("Please enter all the fields.")
        return
    }
    const d = new Date().toLocaleDateString()
    date = [d, ...date]
    water = [w, ...water]
    exercise = [e, ...exercise]
    bloodsugar = [b, ...bloodsugar]

    clearInputs()
    fillTable()
    addToLocalStorage()
})

---------------------------------------------
const editIcon = `<i class="fas fa-edit"></i>`
const deleteIcon = `<i class="fas fa-trash"></i>`
function clearInputs() {
    wInput.value = ""
    eInput.value = ""
    bInput.value =""
    aInput.value=""
    cInput.value=""

}

function addToLocalStorage(){

    localStorage.setItem("date", JSON.stringify(date))
    localStorage.setItem("name", JSON.stringify(name))
    localStorage.setItem("weight", JSON.stringify(weight))
    localStorage.setItem("Height", JSON.stringify(Height))
    localStorage.setItem("Age", JSON.stringify(Age))
    localStorage.setItem("bmi", JSON.stringify(Bmi))
}
function activateEdit(i){
    wInput.value = name[i]
    eInput.value = weight[i]
    bInput.value = Height[i]
    aInput.value = Age[i]
    cInput.value = Bmi[i]
    editIndex = i
    submitButton.classList.add("hidden")
    editSection.classList.remove("hidden")
}
function cancelEdit() {
    clearInputs()
    editIndex = -1
    submitButton.classList.remove("hidden")
    editSection.classList.add("hidden")
}
function editRow(){
    if(editIndex==-1) return
    name[editIndex] = wInput.value
    weight[editIndex] = eInput.value
    Height[editIndex] = bInput.value
    Age[editIndex] = aInput.value
    Bmi[editIndex] = cInput.value
    fillTable()
    addToLocalStorage()
    cancelEdit()
}
function deleteRow(i){
    if(!confirm(
        `Confirm that you want to delete the entry: 
    \n ${date[i]}: ${name[i]}, ${weight[i]}kg, 
${Height[i]}cm,${Age[i]}, ${Bmi[i]}kg,`))
        return
    date.splice(i, 1)
    name.splice(i, 1)
    weight.splice(i, 1)
    Height.splice(i, 1)
    Age.splice(i, 1)
    Bmi.splice(i, 1)
    document.querySelector(`#output > tr:nth-child(${i+1})`)
        .classList.add("delete-animation")
    addToLocalStorage()
    setTimeout(fillTable, 500)
}
function fillTable(){
    const tbody = document.getElementById("output")
    const rows =
        Math.max( name.length,weight.length,Height.length, Age.length ,Bmi.length)
    let html = ""
    for(let i=0; i<rows; i++){
        let w = name[i] || "N/A"
        let e = weight[i] || "N/A"
        let b = Height[i] || "N/A"
        let a = Age[i] || "N/A"
        let d = date[i] || "N/A"
        let c=Bmi[i] || "N/A"
        html+=`<tr>
            <td>${d}</td>
            <td>${w}</td>
            <td>${e}</td>
            <td>${b}</td>
                 <td>${d}</td
                      <td>${c}</td
            <td>
                <button onclick="activateEdit(${i})" 
                        class="edit">${editIcon}
                </button>
            </td>
            <td>
                <button 
                    onclick="deleteRow(${i})" 
                    class="delete">${deleteIcon}
                </button>
            </td>
        </tr>`
    }
    tbody.innerHTML = html;
}

let editIndex = -1;

let date =
    JSON.parse(localStorage.getItem("date")) || []
let name =
    JSON.parse(localStorage.getItem("name")) || []
let weight =
    JSON.parse(localStorage.getItem("weight")) || []
let Height =
    JSON.parse(localStorage.getItem("Height")) || []
let Age =
    JSON.parse(localStorage.getItem("Age")) || []
let Bmi =
    JSON.parse(localStorage.getItem("Bmi")) || []
const wInput = document.getElementById("name")
const eInput = document.getElementById("weight")
const bInput = document.getElementById("Height")
const aInput = document.getElementById("Age")
const cInput = document.getElementById("Bmi")
const submitButton = document.getElementById("submit")
const editSection = document.getElementById("editSection")

fillTable()

submitButton.addEventListener("click", ()=>{
    const w = wInput.value || null;
    const e = eInput.value || null;
    const b = bInput.value || null;
    const a = aInput.value || null;
    const c = cInput.value || null;
    if(w===null || e===null || b===null ||a===null||c===null) {
        alert("Please enter all the fields.")
        return
    }
    const d = new Date().toLocaleDateString()
    date = [d, ...date]
    name = [w, ...name]
    weight = [e, ...weight]
    Height = [b, ...Height]
    Age=[a,...Age]
    clearInputs()
    fillTable()
    addToLocalStorage()
})

------------------------
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body{
            font-family: Calibri, Helvetica, sans-serif;
            background-color: pink;
        }
        .container {
            padding: 50px;
            background-color: #10a3d3;
        }

        input[type=text], input[type=password], textarea {
            width: 100%;
            padding: 15px;
            margin: 5px 0 22px 0;
            display: inline-block;
            border: none;
            background: #f1f1f1;
        }
        input[type=text]:focus, input[type=password]:focus {
            background-color: orange;
            outline: none;
        }
        div {
            padding: 10px 0;
        }
        hr {
            border: 1px solid #f1f1f1;
            margin-bottom: 25px;
        }
        .registerbtn {
            background-color: #05cd0d;
            color: white;
            padding: 16px 20px;
            margin: 8px 0;
            border: none;
            cursor: pointer;
            width: 100%;
            opacity: 0.9;
        }
        .registerbtn:hover {
            opacity: 1;
        }
    </style>
</head>
<body>
<form>
    <div class="container">
        <center>  <h1> GYM Trainer Registeration Form</h1> </center>
        <hr>
        <label> Firstname </label>
        <input type="text" name="firstname" placeholder= "Firstname" size="15" required />
        <label> Middlename: </label>
        <input type="text" name="middlename" placeholder="Middlename" size="15" required />
        <label> Lastname: </label>
        <input type="text" name="lastname" placeholder="Lastname" size="15"required />
        <div>
            <label>
                Course :
            </label>

            <select>
                <option value="Course">Course</option>
                <option value="CARDIO">Cardio</option>
                <option value="WEIGHTLIFTING">Weightlifting</option>
                <option value="STRECHING">Stretching</option>
                <option value="AEROBIC">
                    Aerobic Activity</option>
                <option value="CIRCUIT TRAINING">Circuit Training</option>
                <option value="Balance training">Balance training</option>
            </select>
        </div>
        <div>
            <label>
                Gender :
            </label><br>
            <input type="radio" value="Male" name="gender" checked > Male
            <input type="radio" value="Female" name="gender"> Female
            <input type="radio" value="Other" name="gender"> Other

        </div>
        <label>
            Phone :
        </label>
        <input type="text" name="country code" placeholder="Country Code"  value="+91" size="2"/>
        <input type="text" name="phone" placeholder="phone no." size="10"/ required>
        Current Address :
        <textarea cols="80" rows="5" placeholder="Current Address" value="address" required>
</textarea>
        <label for="email"><b>Email</b></label>
        <input type="text" placeholder="Enter Email" name="email" required>

        <label for="psw"><b>Password</b></label>
        <input type="password" placeholder="Enter Password" name="psw" required>

        <label for="psw-repeat"><b>Re-type Password</b></label>
        <input type="password" placeholder="Retype Password" name="psw-repeat" required>
        <button type="submit" class="registerbtn">Register</button>
</form>
</body>
</html>
------------
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@200;300;400;500&display=swap');

*, *:before, *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

:root {
    --background: #00000044;
    --glow-object: #a530ff;
    --glow-object-grad: linear-gradient(to bottom right, #9d1fff, #bf1fff);
    --glow-object-grad-text: linear-gradient(to bottom right, #d770ff, #bc85ff);
    --glow-shadow: #333037;
    --glow-shadow-text: #7900ffbb;
    --text: #e3dbdb;
}

body {
    width: 100%;
    color: var(--text);
    font-family: "Inter";
    display: grid;
    grid-template-columns: 4.5rem 1fr;
    margin: 0;
}
.bg {
    position: fixed;
    inset: 0;
    z-index: -1;
    background:
            linear-gradient(rgba(94, 71, 138, 0.33), rgb(100, 51, 145)), url("https://d33vw3iu5hs0zi.cloudfront.net/media/xl_exness_trading_apps_eaab53405d.jpg") center center / cover;
}
nav {
    position: sticky;
    top: 0;
    height: 100vh;
    place-self: stretch;
    background: var(--background);
    backdrop-filter: blur(2rem);
    display: flex;
    flex-direction: column;
    padding: 0.5rem;
}
nav > a {
    position: relative;
    display: grid;
    place-content: center;
    color: var(--text);
    height: 3.5rem;
    border-radius: 0.75rem;
    font-size: 1.5rem;
    text-decoration: none;
}
nav > a:after {
    position: absolute;
    content: "";
    left: 0.125rem;
    top: 50%;
    transform: translateY(-50%);
    height: 0rem;
    width: 0.25rem;
    border-radius: 1rem;
    background: var(--glow-object);
    transition: height 200ms ease, box-shadow 200ms ease;
}
nav > a:hover {
    background: #ffffff15
}
nav > a:hover:after {
    height: 2.5rem;
    box-shadow: var(--glow-shadow) 0 0 7px 1px;
}
nav > a.active:after {
    height: 2.5rem;
    box-shadow: var(--glow-shadow) 0 0 7px 1px;
}
nav > .navspacer {
    flex-grow: 1;
}


.dashboard {
    place-self: stretch;
    display: grid;
    place-content: center;
    grid-auto-rows: 9rem;
    grid-template-columns: repeat(auto-fit, 9rem);
    grid-auto-flow: row;
    grid-gap: 0.75rem;
    padding: 0.5rem;
}
.card {
    display: flex;
    flex-direction: column;
    position: relative;
    border-radius: 0.75rem;
    background: var(--background);
    backdrop-filter: blur(2rem);
}
.card > h2 {
    margin: 0;
    padding: 0.375rem 0.5rem;
    font-size: 1.125rem;
}

.card > .bigstats {
    padding-top: 1.75rem;
    display: grid;
    grid-auto-flow: row;
    grid-template-columns: 1fr 1fr 1fr;
    grid-row-gap: 2rem;
    place-content: center;
    padding-bottom: 0.5rem;
}

.card > .bigstats > .stat {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
}

.statnum {
    background: var(--glow-object-grad-text);
    font-size: 2rem;
    font-weight: 600;
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    filter: drop-shadow(var(--glow-shadow-text) 0px 0px 5px);
    line-height: 0.9;
}
.card > .bigstats > .stat > .stattext {
    font-weight: 500;
}

.card > ul {
    margin: 0;
    padding: 0 0.5rem;
}
.card > ul > li {
    list-style-type: none;
    margin: 0;
    padding: 0.5rem 0;
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-top: 1px solid #ffffff22;
    font-weight: 500;
}

.progresscircle {
    --progress: 33;
    position: relative;
    width: 4.5rem;
    height: 4.5rem;
    display: grid;
    place-content: center;
    font-weight: 600;
    margin: -0.375rem -0.25rem;
}
.progresscircle > svg {
    position: absolute;
    inset: 0;
    transform: rotate(-90deg);
}
.progresscircle > svg > circle {
    fill: none;
    stroke: var(--glow-object);
    filter: drop-shadow(var(--glow-shadow) 0 0 5px);
    stroke-width: 8px;
    stroke-dasharray: 250;
    stroke-dashoffset: calc(250 - 2.5 * var(--progress));
}


.card > table {
    flex-grow: 1;
    margin: 0 0.5rem;
    border-spacing: 0;
}
.card > table th, .card > table td {
    margin: 0;
    text-align: center;
    border-top: 1px solid #ffffff22;
}

.card.profile {
    display: flex;
    flex-direction: column;
    justify-content: center;
}
.card.profile > h2 {
    font-weight: 600;
    font-size: 1.5rem;
}
.card.profile > p {
    margin: 0;
    padding-left: 0.5rem;
    font-weight: 500;
    transform: translateY(-0.375rem)
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
    background-color: #83a8ff;
    color: white;
}

h1 {
    background-image: linear-gradient(to right, #0ea5e9, #10b981);
}

h3 {
    background-image: linear-gradient(to right, #ec4899, #8b5cf6);
}

h1,
h3 {
    color: transparent;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.app {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 650px;
    margin: 1rem auto;
    padding: 10px;
    gap: 20px;
}

.inputs {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 20px;
    height: fit-content;
}

.inputs>div {
    height: 100%;
    display: flex;
    justify-content: space-between;
    flex-direction: column;
}

label {
    font-size: 0.9rem;
}

input,
label {
    display: block;
}

input {
    margin-top: 8px;
    margin-bottom: 5px;
    padding: 10px;
    font-size: large;
    background-color: #262626;
    color: white;
    border: none;
    border-radius: 5px;
    width: 100%;
}

input:focus-visible {
    outline: 2px solid #ec4899;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

button{ display: block; cursor: pointer; border: none; }

#submit {
    width: 100%;
    padding: 10px;
    margin-bottom: 10px;
    background-image: linear-gradient(to right, #ec4899, #099f85);
    font-size: 1.3rem;
    border-radius: 5px;
    color: white;
    font-weight: bold;
    transition: scale 0.3s ease-in-out;
}

#editSection{
    width: 100%;
    display: flex;
    gap: 25px;
    justify-content: space-between;
}

#editSection > button {
    width: 100%;
    padding: 10px;
    margin-bottom: 10px;
    font-size: 1.3rem;
    border-radius: 5px;
    color: white;
    font-weight: bold;
    transition: scale 0.3s ease-in-out;
}

#updateEntry { background-image:
        linear-gradient(to right, #ec4899, #8b5cf6); }

#cancelEdit{ background-color: #ef4444; }

#submit:hover, #updateEntry:hover, #cancelEdit:hover { scale: 1.02; }

.hidden{ display: none !important; }

.edit, .delete{
    margin: 0 auto;
    padding: 5px 10px;
    font-size: 1.1rem;
    border-radius: 5px;
    background-color: transparent;
    color: white;
    border: 1px solid white;
}

.edit:hover, .delete:hover{
    background-color: #0a0a0a;
}

table {
    width: 100%;
    border-collapse: collapse;
    position: relative;
    overflow: hidden;
}

th,
td {
    text-align: center;
    padding: 10px;
    border: 0;
}
tr:nth-child(even) {
    background-color: #57534e;
}

tr:nth-child(odd) {
    background-color: #262626;
}

th {
    font-size: 0.9rem;
    background-color: #0a0a0a;
}

tbody > tr:hover{
    background-color: #737373;
    color: black;
}

.delete-animation{
    background-color: #ef4444 !important;
    animation: deleteAnimate 0.4s linear forwards;
}

@keyframes deleteAnimate{
    to{
        transform: translateX(100%);
    }
}
